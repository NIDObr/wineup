#!/usr/bin/env bash

#------------------------------------------------------------------
# Autor: NidoBr
# Mais: < https://github.com/NIDObr >
# Email: coqecoisa@gmail.com
# Versão: 0.7-beta 12/11/2021
# Sobre: Baixa e atualiza versões do WINE e Proton
# License: BSD-3-Clause License
#------------------------------------------------------------------

#---------------------------changelog: ----------------------------
#
# Versão: 0.7-beta 12/11/2021
#	- Adicionado suporte ao Luxtorpeda (DEV)
#	- UI melhorada
#
# Versão: 0.6.1-beta 07/11/2021
#	- Adicionado parametros de configuração para o aria2c
#	- Configurado "--class" para zenity
#
# Versão: 0.6-beta 06/11/2021
#	- Totalmente reformulado, dando prioridade a GUI e facilidade de uso.
#	- wget trocado pelo aria2c, possibilitando downloads paralelos com multiplas conexões
#
# Versão: 0.5-beta 22/09/2021
#	- Adicionado HELP
#	- Corrigido bug que não mostrava algumas versões especificas, como as wine-ge 6-16
#
# Versão: 0.4-beta 21/09/2021
#	- Adicionada opções longas
#	- Download automatico funcionando
#
# Versão: 0.3-beta 20/09/2021
#	- Reformulação em todo o codigo (opções -c, -d e -u)
#	- Troca parcial do curl pelo lynx
#	- Agora a data do lançamento do wine/proton no GitHub é exibido
#	- Download automatico ( -ud ), indisponivel
#
#----------------------------Vars----------------------------------

# Cria uma array associativa contendo as mirros
declare -A mirrors_urls
wineup_version="wineup-0.7-beta"
help="
Uso: $(basename "$0") [ opção ]

Opções:
 -d, --download		Baixa uma ou mais versẽs de sua escolha
 -h, --help		Exibe esta ajuda e sai

"
# Carrega as configuraões
source /etc/wineup/wineup_cfg
source /etc/wineup/wineup_mirrors

#----------------------------Funçoes-------------------------------

# Responsavel por baixar os arquivos solicitados
download_file(){
	[ -e "${dir_downloads}" ] || mkdir "${dir_downloads}"
	[ -e "/tmp/wineup/downloads" ] || mkdir -p "/tmp/wineup/downloads"
	[ -e "${HOME}/.steam/steam/compatibilitytools.d" ] || mkdir -p "${HOME}/.steam/steam/compatibilitytools.d"
	# Baixa as urls soliciadas em e extrai para as determinadas pastas.
	(
		echo '# Baixando arquivos, aguarde...'
		aria2c --summary-interval=0 --console-log-level=error -x"${aria_multi}" -j"${aria_paralel}" -i "/tmp/wineup/dowload_list" -d "/tmp/wineup/downloads" && {
			echo '# Extraindo arquivos...'
			for file_extract in /tmp/wineup/downloads/* ;do
				if $(basename "${file_extract}" | grep -qi 'proton');then
					tar -xaf "${file_extract}" -C "${dir_steamproton}"
				elif $(basename "${file_extract}" | grep -qi 'luxtorpeda');then
					torpeda_ver=$(basename "${file_extract}" | grep -Eo '[0-9]{1,}')
					tar -xaf "${file_extract}" -C "/tmp/wineup/downloads"
					mv "/tmp/wineup/downloads/luxtorpeda" "${dir_steamproton}/luxtorpeda-${torpeda_ver}"
				else
					tar -xaf "${file_extract}" -C "${dir_downloads}"
				fi
			done
			notify-send "${wineup_version}" "Downloads concluidos com sucesso!"
		}
	) |
	# Mostra o progresso do download e extração
	zenity --class="${wineup_version}" --title="${wineup_version}" \
		--text="Iniciando downloads" \
		--progress --pulsate --width=450 \
		--auto-kill --no-cancel
	update_db
}

# Procura atualizações
update_db(){
	tool_type=$(zenity --class="${wineup_version}" --title="${wineup_version}" \
		--text="Escolha qual ferramenta você quer baixar:" \
		--forms --width=400 --add-combo="Versão:" \
		--combo-values="WineGE|WineLutris|WineTKG|ProtonGE|ProtonTKG|LuxtorpedaDEV" )
	[ -z "$tool_type" -o "${tool_type}" = " " ] && exit 0
	$(zenity --class="${wineup_version}" --title="${wineup_version}" --text="Atualizando listas, aguarde..." --progress --pulsate --auto-kill --no-cancel) &
	export pid_update_z=$(pidof zenity | awk -F ' ' '{print $1}')
	# Responsavel pelo Web-Scraping, extrai as informações necessarias das urls
	index=$(cat /etc/wineup/wineup_mirrors | grep -Eio "( ${tool_type}[a-z]* )")
	count=2
	release_list=$(lynx --dump "${mirrors_urls[${index}]}" | grep -Eo "https\:\/\/.*releases.*tar\.(gz|xz|zst)")
	# Procura por multiplas paginas no GitHub
	while true;do
		next_page=$(lynx --dump "${mirrors_urls[${index}]}" | grep -m 1 -Eo "https://.*\?page\=${count}.*")
		$(lynx --dump "${next_page}" | grep -q -Eo "https\:\/\/.*releases.*tar\.(gz|xz|zst)") && {
			release_list=$(printf "${release_list}\n" ; lynx --dump "${next_page}" | grep -Eo "https\:\/\/.*releases.*tar\.(gz|xz|zst)")
		} || {
			break
		}
		((count++))
	done
	# Separa wine e proton, adiciona a entrada na lista de versões e formata para exibir na tela
	for release in "${release_list}";do
		case "${tool_type}" in
			WineGE|WineLutris|WineTKG)
				if `printf "${release}" | awk -F '/' '{print $9}' | grep -Eqi "(wine|lutris)"`;then
					printf '%s\n' "${release}" | awk -F '/' '{print $9}' >> "/tmp/wineup/release_list"
				fi
			;;
			ProtonGE|ProtonTKG)
				if `printf "${release}" | awk -F '/' '{print $9}' | grep -qi "proton"`;then
					printf '%s\n' "${release}" | awk -F '/' '{print $9}' >> "/tmp/wineup/release_list"
				fi
			;;
			*)
				printf '%s\n' "${release}" | awk -F '/' '{print $9}' >> "/tmp/wineup/release_list"
			;;
		esac
	done
	# Gera a lista com urls
	printf "${release_list}" >> "/tmp/wineup/url_release_list"
}

#------------------------------------------------------------------

case $1 in
	-d|--download)
		# recria os diretorios temporarios
		[ -e "/tmp/wineup" ] && rm -rf "/tmp/wineup" ; mkdir "/tmp/wineup" || mkdir "/tmp/wineup"
		# Obtem a lista de versões disponiveins
		update_db
		kill "${pid_update_z}"
		# Selecionar uma ou mais versões para download
		selec_list=$(zenity --class="${wineup_version}" --title="${wineup_version}" --list --multiple --checklist \
			--width=450 \
			--height=600 \
			--text="Versões disponiveins:" \
			--separator=" " \
			--column="" \
			--column="Versão" \
			$(for i in `cat "/tmp/wineup/release_list"`;do printf "0 \n${i} \n";done)
		)
		[ -z "$selec_list" ] && exit 0
		# Obtem as URLs e prepara para o download
		for url_get in $selec_list;do
			grep "$url_get" /tmp/wineup/url_release_list >> "/tmp/wineup/dowload_list"
			grep "$url_get" /tmp/wineup/url_release_list
		done
		download_file
	;;
	-h|--help|*)printf "${help}";;
esac
