#!/usr/bin/env bash

#------------------------------------------------------------------
# Author: NidoBr
# More: < https://github.com/NIDObr >
# Version: 0.1-beta 06/08/2021
# Info: Baixa e atualiza versões do WINE e Proton
# License: BSD-3-Clause License
#------------------------------------------------------------------

#----------------------------Vars----------------------------------

declare -A wine_urls proton_urls
tmprefix=$(date +%H%M)
main_site="https://github.com"

# Carrega as configuraões
source wineup.cfg

#----------------------------Funçoes-------------------------------

# Função principal, cria e atualiza a tabela de versões disponiveins
manage_build(){
	case $1 in
		# Cria a tabela de versões
		create_db)
			`printf $index | grep -q "wine"` && {
				curl -s ${wine_urls[${index}]} | grep -Eon "(href=.*download.*.tar.(xz|zst))" | sort -r | awk -F 'href="' '{print $2}' > ${HOME}/.local/share/wineup/releases_${index}
			} || {
				curl -s ${proton_urls[${index}]} | grep -Eon "(href=.*download.*.tar.(gz|xz))" | sort -r | awk -F 'href="' '{print $2}' > ${HOME}/.local/share/wineup/releases_${index}
			}
			printf '%s\n' "Encontrado ${index}:"
			cat ${HOME}/.local/share/wineup/releases_${index} | awk -F \/ '{print "GitHub: "$2"	Vesão: "$6"	File: "$7}'
			printf "\n"
		;;
		# Atualiza a tabela de versões
		update_db)
			echo $1
			[[ -e /tmp/wineup ]] || mkdir /tmp/wineup
			`printf $index | grep -q "wine"` && {
				curl -s ${wine_urls[${index}]} | grep -Eon "(href=.*download.*.tar.(xz|zst))" | sort -r | awk -F 'href="' '{print $2}' > /tmp/wineup/${tmprefix}_releases_${index}.tmp
				echo 1
			} || {
				curl -s ${proton_urls[${index}]} | grep -Eon "(href=.*download.*.tar.(gz|xz))" | sort -r | awk -F 'href="' '{print $2}' > /tmp/wineup/${tmprefix}_releases_${index}.tmp
				echo 2
			}
			diff /tmp/wineup/${tmprefix}_releases_${index}.tmp ${HOME}/.local/share/wineup/releases_${index} | grep -Eo "(\/.*.tar.(gz|xz|zst))" > /tmp/wineup/${tmprefix}_releases_${index}.diff.tmp && {
				printf '%s\n' "Encontrado nova(s) versões (${index}):"
				cat /tmp/wineup/${tmprefix}_releases_${index}.diff.tmp >> ${HOME}/.local/share/wineup/releases_${index}
 				cat /tmp/wineup/${tmprefix}_releases_${index}.diff.tmp | awk -F \/ '{print "GitHub: "$2"	Vesão: "$6"	File: "$7}'
				printf "\n" ; local a=0
				while [ $a = 0 ];do
					read -p "Baixar? [s/n] " resp
					case $resp in
						s|S) a=1 ; download_build ;;
						n|N) a=1 ; printf '%s\n' "Saindo" ; a=1 ; exit 0 ;;
						*) a=0 printf '%s\n' "Opção desconhecida" ;;
					esac
				done
			} || {
				printf '%s\n' "Nada a fazer, saindo..."
				exit 0
			}
		;;
		# Seleciona uma versão disponivel para download
		selec_db)
			[[ -e /tmp/wineup ]] || mkdir /tmp/wineup
			PS3="Qual versão? [ctrl+c para sair] "

			printf "Listando as versões disponiveins: \n\n"
			select build_select in `cat ${HOME}/.local/share/wineup/releases_* | awk -F '/' '{print $7}'`;do
				cat ${HOME}/.local/share/wineup/releases_* | grep $build_select > /tmp/wineup/${tmprefix}_select_version.tmp
				download_build selec_db
			done
		;;
		*)printf '%s\n' "Erro, opção desconhecida";;
	esac
}
# Baixa atualizaçoes
download_build(){
	printf "\nIniciando Downloads\n"
	[ -e "$dir_winebuilds" ] || mkdir "$dir_winebuilds"
	[ -e /tmp/wineup ] || mkdir /tmp/wineup
	[[ $1 == "selec_db" ]] && {
		local list_url="/tmp/wineup/${tmprefix}_select_version.tmp"
	} || {
		local list_url="/tmp/wineup/${tmprefix}_releases_${index}.diff.tmp"
	}
	for url_get in `cat $list_url`;do
		printf '%s\n' "Baixando de \"${main_site}${url_get}\""
		wget -nv --show-progress "${main_site}${url_get}" -O "/tmp/wineup/`basename ${url_get}`" && {
			printf "\n\"`basename ${url_get}`\" baixado com sucesso\n"
			printf "Extraindo arquivos...\n\n"
			`basename ${url_get} | grep -qi "proton"` && {
				tar xvaf "/tmp/wineup/`basename ${url_get}`" -C $HOME/.steam/steam/compatibilitytools.d && printf "Extração completa!\n\n"
			} || {
				tar xvaf "/tmp/wineup/`basename ${url_get}`" -C "$dir_winebuilds" && printf "Extração completa!\n\n"
			}
			rm -rf /tmp/wineup
		}
	done
}

#----------------------------Main-----------------------------------

[[ $1 == "-d" ]] && manage_build selec_db
[ -e ${HOME}/.local/share/wineup ] || {
	mkdir ${HOME}/.local/share/wineup
	for index in `cat wineup.cfg | grep -Eo "(\[[a-z]*\])" | grep -Eo "([a-z]*)"`;do
		manage_build create_db
	done
} && {
	for index in `cat wineup.cfg | grep -Eo "(\[[a-z]*\])" | grep -Eo "([a-z]*)"`;do
		manage_build update_db
	done
}

rm -rf /tmp/wineup
